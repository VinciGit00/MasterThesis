Grid_ERA5Land <-read.csv("/Users/marcovinciguerra/Desktop/Griglia/Grid_ERA5LandWithPoints.csv")
Grid001<- read.csv("/Users/marcovinciguerra/Desktop/Griglia/second_grid_withPoints.csv")
Grid001<-Grid001[,c(3,4)]
coordinates(Grid001)<-c("Lon", "Lat")
proj4string(Grid001) <- CRS("+init=epsg:4326")
comuni <- spTransform(comuni, CRS = Grid001@proj4string)
grid_procom <- cbind(as.data.frame(Grid001),over(Grid001,comuni)[,c(6,8)])
my_data<- my_data[my_data$Date!="2020-1-1",]
my_data$Date<-as.Date(my_data$Date)
# 3. ####
Grid_ERA5Land$ID <- as.character(sample(100000:999999,nrow(Grid_ERA5Land)))
for (lat in unique(Grid_ERA5Land$Lat)) {
for (lon in unique(Grid_ERA5Land$Lon)) {
id <- Grid_ERA5Land$ID[Grid_ERA5Land$Lat==lat&Grid_ERA5Land$Lon==lon]
grid_procom$GRID_01[grid_procom$Lat<(lat+0.05)&grid_procom$Lat>(lat-0.05)&grid_procom$Lon<(lon+0.05)&grid_procom$Lon>(lon-0.05)] <- id
}
}
# Grid_ERA5Land_p <- Grid_ERA5Land[rep(seq_len(nrow(Grid_ERA5Land)),length(unique(my_data$Date))),]
# Grid_ERA5Land_p$Date <- rep(unique(my_data$Date),each=1053)
library(doParallel)
registerDoParallel()
bov_swi <- foreach (i = unique(my_data$Date), .combine=rbind) %dopar% {
print(as.Date(i,origin="1970/01/01"))
my_data_d<-my_data[my_data$Date==i,]
grid_procom_day <- merge(grid_procom,my_data_d,all.x=T)
bov <- aggregate(grid_procom_day$DensityBovine, list(grid_procom_day$GRID_01), FUN=mean)
names(bov)<-c("grid01","dens_bov")
swi <- aggregate(grid_procom_day$DensitySwine, list(grid_procom_day$GRID_01), FUN=mean)
names(swi)<-c("grid01","dens_swi")
bov_swi <- merge(bov,swi)
bov_swi <- cbind(i,bov_swi)
names(bov_swi)[1:2]<-c("Date","ID")
bov_swi$Date <- as.Date(bov_swi$Date,origin="1970/01/01")
bov_swi <- merge(bov_swi,Grid_ERA5Land[,c(2,3,6)])
}
print("ok")
save(bov_swi,file="/Users/marcovinciguerra/Desktop/Griglia/grid001_bov_swi.Rdata")
write.csv(SingleLevels, file = "/Users/marcovinciguerra/Desktop/Griglia/grid001_bov_swi.csv")
write.csv(bov_swi, file = "/Users/marcovinciguerra/Desktop/Griglia/grid001_bov_swi.csv")
clear
big <- read.csv("/Users/marcovinciguerra/Desktop/create2021/AGC_Dataset .csv")
alt <- read.csv("/Users/marcovinciguerra/Desktop/create2021/Tosee/ALT_AGC.csv")
clc <- read.csv("/Users/marcovinciguerra/Desktop/create2021/Tosee/CLC_AGC.csv")
idw <- read.csv("/Users/marcovinciguerra/Desktop/create2021/Tosee/idw_res.csv")
names(idw)[2] <- "Longitude"
Latitude
names(idw)[3] <- "Latitude"
merged_df <- merge(alt, idw, by = c("Longitude", "Latitude"))
names(idw)[4] <- "Time"
merged_df <- merge(alt, idw, by = c("Longitude", "Latitude"))
merged_df$X <- NULL
load("/Users/marcovinciguerra/Desktop/dataMerge.rdata")
load("/Users/marcovinciguerra/Desktop/dataMerge.rdata")
big <- read.csv("/Users/marcovinciguerra/Desktop/create2021/AGC_Dataset.csv")
big <- read.csv("/Users/marcovinciguerra/Desktop/create2021/AGC_Dataset.csv")
big <- read.csv("/Users/marcovinciguerra/Desktop/create2021/AGC_Dataset.csv")
alt <- read.csv("/Users/marcovinciguerra/Desktop/create2021/Tosee/ALT_AGC.csv")
big <- read.csv("/Users/marcovinciguerra/Desktop/create2021/AGC_Dataset.csv")
clc <- read.csv("/Users/marcovinciguerra/Desktop/create2021/Tosee/CLC_AGC.csv")
idw <- read.csv("/Users/marcovinciguerra/Desktop/create2021/Tosee/idw_res.csv")
load("/Users/marcovinciguerra/Desktop/create2021/Tosee/dataMerge.rdata")
merged_df <- merge(dataMerge.rdata, idw, by = "X")
merged_df <- merge(dataMerge, idw, by = "X")
merged_df <- merge(merged_df, idw, by = c("Longitude", "Latitude"))
names(idw)[2] <- "Longitude"
names(idw)[3] <- "Latitude"
names(idw)[4] <- "Time"
merged_df <- merge(dataMerge, idw, by = "X")
merged_df <- merge(merged_df, idw, by = c("Longitude", "Latitude"))
names(dataMerge)[3] <-"Time"
names(dataMerge)[3] <-"Time"
names(dataMerge)[4] <-"LI_bovine"
names(dataMerge)[5] <-"LI_pigs"
merged_df <- merge(dataMerge, idw, by = "Time, X")
merged_df <- merge(dataMerge, idw, by = c("Time", "X"))
View(merged_df)
merged_df <- merged_df[, c("Latitude", "Longitude", "Time", "Altitude")]
merged_df <- merge(merged_df, alt, by = c("Longitude", "Latitude"))
merged_df <- merge(dataMerge, idw, by = c("Time", "X"))
names(idw)[0] <- "PRO_COM"
names(idw)[0] <- "PRO_COM"
names(idw)[1] <- "PRO_COM"
merged_df <- merge(dataMerge, idw, by = c("Time", "PRO_COM"))
merged_df <- merge(merged_df, alt, by = c("Longitude", "Latitude"))
View(big)
colnames(data)
colnames(merged_df)
names(merged_df)[8] <- "WE_mean_temperature"
names(merged_df)[20] <- "WE_mean_wind_speed_100m"
names(merged_df)[20] <- "WE_mean_wind_speed_100m"
names(merged_df)[8] <- "WE_mean_temperature"
names(merged_df)[9] <- "WE_mean_wind_speed_10m"
names(merged_df)[10] <- "WE_max_wind_speed_10m"
names(merged_df)[11] <- "WE_mode_wind_direction_10m"
names(merged_df)[12] <- "WE_sum_total_precipitation"
names(merged_df)[13] <- "WE_mean_surface_pressure"
names(merged_df)[14] <- "WE_max_surface_solar_radiation"
names(merged_df)[15] <- "WE_fixed_high_vegetation_index"
names(merged_df)[16] <- "WE_fixed_low_vegetation_index"
names(merged_df)[17] <- "WE_min_relative_numidity"
names(merged_df)[18] <- "WE_mean_relative_numidity"
names(merged_df)[19] <- "WE_max_relative_numidity"
names(merged_df)[20] <- "WE_mean_wind_speed_100m"
names(merged_df)[21] <- "WE_max_wind_speed_100m"
names(merged_df)[22] <- "WE_mode_wind_direction_100m"
names(merged_df)[23] <- "WE_max_relative_numidity"
names(merged_df)[24] <- "WE_min_boundary_layer_heigth"
names(merged_df)[25] <- "WE_precipitation_type"
View(merged_df)
names(idw)[1] <- "PRO_COM"
merged_df <- merge(dataMerge, idw, by = c("Time", "PRO_COM"))
merged_df <- merge(merged_df, alt, by = c("Longitude", "Latitude"))
big <- read.csv("/Users/marcovinciguerra/Desktop/create2021/AGC_Dataset.csv")
alt <- read.csv("/Users/marcovinciguerra/Desktop/create2021/Tosee/ALT_AGC.csv")
clc <- read.csv("/Users/marcovinciguerra/Desktop/create2021/Tosee/CLC_AGC.csv")
idw <- read.csv("/Users/marcovinciguerra/Desktop/create2021/Tosee/idw_res.csv")
agc <- read.csv("/Users/marcovinciguerra/Desktop/create2021/Tosee/AGC_Dataset.csv")
load("/Users/marcovinciguerra/Desktop/create2021/Tosee/dataMerge.rdata")
names(idw)[2] <- "Longitude"
names(idw)[3] <- "Latitude"
names(idw)[4] <- "Time"
names(dataMerge)[3] <-"Time"
names(dataMerge)[4] <-"LI_bovine"
names(dataMerge)[5] <-"LI_pigs"
#I have to drop variables in agc before!
names(idw)[1] <- "PRO_COM"
merged_df <- merge(dataMerge, idw, by = c("Time", "PRO_COM"))
merged_df <- merge(merged_df, alt, by = c("Longitude", "Latitude"))
merged_df <- merge(dataMerge, idw, by = c("Time", "PRO_COM"))
merged_df <- merge(dataMerge, idw, by = c("Time", "PRO_COM"))
merged_df <- merge(merged_df, alt, by = c("Longitude", "Latitude"))
View(dataMerge)
View(dataMerge)
merged_df <- merge(dataMerge, idw, by = c("Time", "PRO_COM"))
merged_df2 <- merge(merged_df, alt, by = c("Longitude", "Latitude"))
4077/365
load("/Users/marcovinciguerra/Desktop/create2021/grid001_bov_swi.rdata")
library(rgdal)
gc()
shapefile_path <- "/Users/marcovinciguerra/Desktop/bdn/second_grid.shp"
my_shapefile <- readOGR(dsn = shapefile_path, layer = basename(shapefile_path))
my_shapefile <- readOGR(dsn = shapefile_path, layer = basename(shapefile_path))
library(sf)
my_shapefile <- st_read(dsn = shapefile_path)
View(my_shapefile)
for (i in 1:nrow(my_shapefile)) {
lon <- my_shapefile$Lon[i]
lat <- my_shapefile$Lat[i]
# Do something with lon and lat
# For example, print them to the console:
print(paste("Longitude:", lon, "Latitude:", lat))
}
##CSV
read_csv = read.csv('/Users/marcovinciguerra/Desktop/bdn/Agrimonia_Dataset_v_2_0_1.csv')
View(read_csv)
##Select the interested columns
subset <- read_csv[c("Latitude","Longitude")]
View(subset)
##Select the interested columns
subset <- read_csv[c("Latitude","Longitude", "Time", "LI_pigs")]
View(read_csv)
View(subset)
View(subset)
##Select the interested columns
subset <- read_csv[c("Latitude","Longitude", "Time", "LI_pigs", "LI_bovine")]
join <- merge(x = my_shapefile, y = subset, by = c("Latitude", "Longitude"))
View(my_shapefile)
View(subset)
colnames(subset)[1] = "Lan"
subset <- read_csv[c("Latitude","Longitude", "Time", "LI_pigs", "LI_bovine")]
colnames(subset)[1] = "Lat"
colnames(subset)[2] = "Lon"
join <- merge(x = my_shapefile, y = subset, by = c("Lat", "Lon"))
View(join)
my_shapefile$field_1 <- NULL
#Libraries
library(rgdal)
library(sf)
#Reading the files
##Shapefile
shapefile_path <- "/Users/marcovinciguerra/Desktop/bdn/second_grid.shp"
my_shapefile <- st_read(dsn = shapefile_path)
my_shapefile$field_1 <- NULL
##CSV
read_csv <- read.csv('/Users/marcovinciguerra/Desktop/bdn/Agrimonia_Dataset_v_2_0_1.csv')
##Select the interested columns
subset <- read_csv[c("Latitude","Longitude", "Time", "LI_pigs", "LI_bovine")]
colnames(subset)[1] = "Lat"
colnames(subset)[2] = "Lon"
#Join the dat
subset <- subset %>%
mutate(across(1:2, round, 2))
library(dplyr)
subset <- subset %>%
mutate(across(1:2, round, 2))
#Join the dataframe
join <- merge(x = my_shapefile, y = subset, by = c("Lat", "Lon"))
View(join)
##Select the interested columns
subset <- read_csv[c(,"Longitude", "Latitude", "Time", "LI_pigs", "LI_bovine")]
##Select the interested columns
subset <- read_csv[c("Longitude", "Latitude", "Time", "LI_pigs", "LI_bovine")]
colnames(subset)[1] = "Lon"
subset <- subset %>%
mutate(across(1:2, round, 2))
subset <- subset %>%
mutate(across(1:2, round, 2))
my_shapefile <- my_shapefile %>%
mutate(across(1:2, round, 2))
#Join the dataframe
join <- merge(x = my_shapefile, y = subset, by = c("Lat", "Lon"))
colnames(subset)[2] = "Lat"
#Join the dataframe
join <- merge(x = my_shapefile, y = subset, by = c("Lat", "Lon"))
View(join)
# Loop over each unique location
for (i in seq_len(nrow(unique_locs))) {
loc <- unique_locs[i, ]
lon <- loc[1]
lat <- loc[2]
# Get the data for this location
loc_data <- join[join$Lon == lon & join$Lat == lat, ]
# Get the unique days for this location
unique_days <- unique(loc_data$Time)
# Loop over each unique day for this location
for (j in seq_len(length(unique_days))) {
day <- unique_days[j]
# Get the data for this day at this location
day_data <- loc_data[loc_data$Time == day, ]
# Process the data for this day at this location
li_pigs <- sum(day_data$LI_pigs)
li_bovine <- sum(day_data$LI_bovine)
# Do something with the results (e.g., print them)
cat(sprintf("Location: (%f, %f), Day: %s, LI_pigs: %f, LI_bovine: %f\n", lon, lat, day, li_pigs, li_bovine))
}
View(join)
#Libraries
library(rgdal)
library(sf)
library(dplyr)
library(sp)
library(raster)
#Reading the files
##Shapefile
shapefile_path <- "/Users/marcovinciguerra/Desktop/bdn/second_grid.shp"
my_shapefile <- st_read(dsn = shapefile_path)
my_shapefile$field_1 <- NULL
##CSV
read_csv <- read.csv('/Users/marcovinciguerra/Desktop/bdn/Agrimonia_Dataset_v_2_0_1.csv')
##Select the interested columns
subset <- read_csv[c("Longitude", "Latitude", "Time", "LI_pigs", "LI_bovine")]
colnames(subset)[1] = "Lon"
colnames(subset)[2] = "Lat"
#Round the columns
my_shapefile <- my_shapefile %>%
mutate(across(1:2, round, 2))
subset <- subset %>%
mutate(across(1:2, round, 2))
#Join the dataframe
join <- merge(x = my_shapefile, y = subset, by = c("Lat", "Lon"))
join$buffer <- st_buffer(join, dist = 10000)
#Libraries
library(rgdal)
library(sf)
library(dplyr)
library(sp)
library(raster)
#Reading the files
##Shapefile
shapefile_path <- "/Users/marcovinciguerra/Desktop/bdn/second_grid.shp"
my_shapefile <- st_read(dsn = shapefile_path)
my_shapefile$field_1 <- NULL
##CSV
read_csv <- read.csv('/Users/marcovinciguerra/Desktop/bdn/Agrimonia_Dataset_v_2_0_1.csv')
##Select the interested columns
subset <- read_csv[c("Longitude", "Latitude", "Time", "LI_pigs", "LI_bovine")]
colnames(subset)[1] = "Lon"
colnames(subset)[2] = "Lat"
#Round the columns
my_shapefile <- my_shapefile %>%
mutate(across(1:2, round, 2))
subset <- subset %>%
mutate(across(1:2, round, 2))
#Join the dataframe
join <- merge(x = my_shapefile, y = subset, by = c("Lat", "Lon"))
join$buffer <- st_buffer(join$geometry, dist = 10000)
View(join)
join$buffer <- st_buffer(join$geometry, nQuadSegs = 4,  endCapStyle = 'SQUARE', dist = 0.05)
View(read_csv)
View(read_csv)
unique(read_csv[, 1:3])
cord <- unique(read_csv[, 1:3])
library(sp)
coordinates(cord) <- c("Longitude", "Latitude")
View(cord)
plot(cord)
View(join)
join$buffer <- st_buffer(cord, nQuadSegs = 4,  endCapStyle = 'SQUARE', dist = 0.05)
library(raster)
st_as_sf(cord)
cord_sd ->st_as_sf(cord)
cord_sf <- st_as_sf(cord)
join$buffer <- st_buffer(cord_sf, nQuadSegs = 4,  endCapStyle = 'SQUARE', dist = 0.05)
st_buffer <- st_buffer(cord_sf, nQuadSegs = 4,  endCapStyle = 'SQUARE', dist = 0.05)
View(st_buffer)
plot(st_nuffer)
plot(st_buffer)
View(st_buffer)
View(join)
##Select the interested columns
subset <- read_csv[c("Longitude", "Latitude", "Time", "LI_pigs", "LI_bovine", "IdStations")]
##Select the interested columns
subset <- read_csv[c("Longitude", "Latitude", "Time", "LI_pigs", "LI_bovine", "IDStations")]
View(subset)
##Select the interested columns
subset <- read_csv[c("IDStations", "Longitude", "Latitude", "Time", "LI_pigs", "LI_bovine")]
colnames(subset)[3] = "Lat"
#Round the columns
my_shapefile <- my_shapefile %>%
mutate(across(1:2, round, 2))
colnames(subset)[2] = "Lon"
colnames(subset)[3] = "Lat"
View(join)
#Join the dataframe
join <- merge(x = my_shapefile, y = subset, by = c("Lat", "Lon"))
#Libraries
library(rgdal)
library(sf)
library(dplyr)
library(sp)
library(raster)
#Reading the files
##Shapefile
shapefile_path <- "/Users/marcovinciguerra/Desktop/bdn/second_grid.shp"
my_shapefile <- st_read(dsn = shapefile_path)
my_shapefile$field_1 <- NULL
##CSV
read_csv <- read.csv('/Users/marcovinciguerra/Desktop/bdn/Agrimonia_Dataset_v_2_0_1.csv')
cord <- unique(read_csv[, 1:3])
coordinates(cord) <- c("Longitude", "Latitude")
cord_sf <- st_as_sf(cord)
##Select the interested columns
subset <- read_csv[c("IDStations", "Longitude", "Latitude", "Time", "LI_pigs", "LI_bovine")]
colnames(subset)[2] = "Lon"
colnames(subset)[3] = "Lat"
#Round the columns
my_shapefile <- my_shapefile %>%
mutate(across(1:2, round, 2))
subset <- subset %>%
mutate(across(1:2, round, 2))
subset <- subset %>%
mutate(across(2:3, round, 2))
#Join the dataframe
join <- merge(x = my_shapefile, y = subset, by = c("Lat", "Lon"))
View(st_buffer)
View(st_buffer)
join <- merge(x= join, y=st_buffer, by=("IDStations"))
# Perform a spatial join between the join and st_buffer objects
join <- st_join(join, st_buffer, join = st_intersects)
View(join)
View(join)
View(st_buffer)
View(st_buffer)
join <- merge(x= join, y=st_buffer, by="IDStations")
View(cord_sf)
View(my_shapefile)
View(my_shapefile)
load("/Users/marcovinciguerra/Downloads/WE_EM_LA_LI.Rdata")
load("~/Downloads/WE_EM_LA_LI.Rdata")
View(WE_EM_LA_LI)
View(WE_EM_LA_LI)
View(WE_EM_LA_LI)
View(WE_EM_LA_LI)
View(WE_EM_LA_LI)
View(st_buffer)
pot(st_buffer)
plot(st_buffer)
library(sf)
library(sf)
plot(st_buffer)
View(st_buffer)
View(st_buffer)
load("/Users/marcovinciguerra/Downloads/idw_era5land.RData")
View(df1)
View(df2)
View(df2_s)
View(df2_s)
View(dist)
View(dist)
#Libraries
library(rgdal)
library(sf)
library(dplyr)
library(sp)
library(raster)
library(leaflet)
library(sf)
setwd("~/R/bdn/SerieStorica")
source("funzioneSerieStorica.R")
#Loading the shapefile
setwd("~/R/bdn")
shapename <- read_sf('Com01012021_g_WGS84.shp')
#Loading the datasets
setwd("~/R/bdn")
my_shapefile <- st_read(dsn = "Com01012021_g_WGS84.shp")
setwd("~/R/bdn/Plot Differenze")
load("top20.rdata")
setwd("~/R/bdn")
csv <- read.csv("Agrimonia_Dataset_v_2_0_1.csv")
coordinates <- unique(csv[,1:3])
coordinates(coordinates) <- c("Longitude", "Latitude")
cord_sf <- st_as_sf(coordinates)
#cord_sf <- st_as_sf(coordinates, coords =  c("Longitude", "Latitude"), crs = 4326)
save(coordinates, file = "coordinates.Rdata")
st_buffer <- st_buffer(cord_sf, nQuadSegs = 4,  endCapStyle = 'SQUARE', dist = 0.05)
st_buffer_big <- st_buffer(cord_sf, nQuadSegs = 4,  endCapStyle = 'SQUARE', dist = 0.2)
setwd("~/R/bdn")
load("newDensity.rdata")
positions <- csv[, c("IDStations", "Latitude", "Longitude")]
#merge <-merge(positions, top_20_stazioni, on = "IDStations")
merge <-positions
plot(my_shapefile$geometry)
#Old time series
#select_util_old <- merge(csv, top_20_stazioni, on = "IDStation")
select_util_old <- csv
select_util_old <- select_util_old[, c("IDStations", "Time","LI_pigs", "LI_bovine")]
#New time series
#merge_new <- merge(top_20_stazioni, result, on= "IDStations")
merge_new <- result
merge_new <- merge_new[, c("IDStations", "Date", "wdSuini", "wdBovini")]
merge_new <- rename(merge_new, Time = Date, LI_pigs = wdSuini, LI_bovine = wdBovini)
setwd("~/R/bdn/PlotTool")
save(merge_new, file= "Merge_new.rdata")
save(select_util_old, file="old_utils.rdata")
#Merge
load("dataMerge.rdata")
setwd("~/R/bdn")
#Libraries
library(rgdal)
library(sf)
library(dplyr)
library(sp)
library(raster)
library(leaflet)
library(sf)
setwd("~/R/bdn/SerieStorica")
source("funzioneSerieStorica.R")
#Loading the shapefile
setwd("~/R/bdn")
shapename <- read_sf('Com01012021_g_WGS84.shp')
#Loading the datasets
setwd("~/R/bdn")
my_shapefile <- st_read(dsn = "Com01012021_g_WGS84.shp")
setwd("~/R/bdn/Plot Differenze")
load("top20.rdata")
setwd("~/R/bdn")
csv <- read.csv("Agrimonia_Dataset_v_2_0_1.csv")
coordinates <- unique(csv[,1:3])
coordinates(coordinates) <- c("Longitude", "Latitude")
cord_sf <- st_as_sf(coordinates)
#cord_sf <- st_as_sf(coordinates, coords =  c("Longitude", "Latitude"), crs = 4326)
save(coordinates, file = "coordinates.Rdata")
st_buffer <- st_buffer(cord_sf, nQuadSegs = 4,  endCapStyle = 'SQUARE', dist = 0.05)
st_buffer_big <- st_buffer(cord_sf, nQuadSegs = 4,  endCapStyle = 'SQUARE', dist = 0.2)
setwd("~/R/bdn")
load("newDensity.rdata")
positions <- csv[, c("IDStations", "Latitude", "Longitude")]
#merge <-merge(positions, top_20_stazioni, on = "IDStations")
merge <-positions
plot(my_shapefile$geometry)
#Old time series
#select_util_old <- merge(csv, top_20_stazioni, on = "IDStation")
select_util_old <- csv
select_util_old <- select_util_old[, c("IDStations", "Time","LI_pigs", "LI_bovine")]
#New time series
#merge_new <- merge(top_20_stazioni, result, on= "IDStations")
merge_new <- result
merge_new <- merge_new[, c("IDStations", "Date", "wdSuini", "wdBovini")]
merge_new <- rename(merge_new, Time = Date, LI_pigs = wdSuini, LI_bovine = wdBovini)
setwd("~/R/bdn/PlotTool")
save(merge_new, file= "Merge_new.rdata")
save(select_util_old, file="old_utils.rdata")
#Merge
setwd("~/R/bdn")
load("dataMerge.rdata")
dataMerge <- dataMerge[dataMerge$Date == "2020-12-31",]
mergeA <- merge(my_shapefile, dataMerge, by= "PRO_COM" )
#Plot dei suini
setwd("~/R/bdn/SerieStorica")
pdf("best_stations_Swine.pdf")
# Create a vector of unique station IDs
stations <- unique(merge_new$IDStations)
mergeA <- st_transform(mergeA, 4236)
save(mergeA, file ="mergeA.Rdata")
st_crs(cord_sf) <- st_crs(mergeA)
setwd("~/R/bdn/PlotTool")
save(cord_sf, file= "cord_sf.rdata")
library(ggplot2)
library(units)
setwd("~/R/bdn/SerieStorica/AllPdf")
setwd("~/R/bdn/SerieStorica/AllPdf")
library(ggplot2)
library(units)
setwd("~/R/bdn/SerieStorica/AllPdf")
# Loop through the stations
for (i in seq_along(stations)) {
# Create a PDF file device for each station
pdf(paste0(stations[i], ".pdf"), width = 11, height = 8.5,  compress = 9)
print(plot_bdn(stations[i]))
# Close the PDF file device for each station
dev.off()
}
