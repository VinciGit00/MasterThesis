library(raster)
library(leaflet)
library(sf)
setwd("~/R/bdn/SerieStorica")
source("funzioneSerieStorica.R")
#Loading the shapefile
setwd("~/R/bdn")
shapename <- read_sf('Com01012021_g_WGS84.shp')
#Loading the datasets
setwd("~/R/bdn")
my_shapefile <- st_read(dsn = "Com01012021_g_WGS84.shp")
setwd("~/R/bdn/Plot Differenze")
load("top20.rdata")
setwd("~/R/bdn")
csv <- read.csv("Agrimonia_Dataset_v_2_0_1.csv")
coordinates <- unique(csv[,1:3])
coordinates(coordinates) <- c("Longitude", "Latitude")
cord_sf <- st_as_sf(coordinates)
#cord_sf <- st_as_sf(coordinates, coords =  c("Longitude", "Latitude"), crs = 4326)
save(coordinates, file = "coordinates.Rdata")
st_buffer <- st_buffer(cord_sf, nQuadSegs = 4,  endCapStyle = 'SQUARE', dist = 0.05)
st_buffer_big <- st_buffer(cord_sf, nQuadSegs = 4,  endCapStyle = 'SQUARE', dist = 0.2)
setwd("~/R/bdn")
load("newDensity.rdata")
positions <- csv[, c("IDStations", "Latitude", "Longitude")]
#merge <-merge(positions, top_20_stazioni, on = "IDStations")
merge <-positions
plot(my_shapefile$geometry)
#Old time series
#select_util_old <- merge(csv, top_20_stazioni, on = "IDStation")
select_util_old <- csv
select_util_old <- select_util_old[, c("IDStations", "Time","LI_pigs", "LI_bovine")]
#New time series
#merge_new <- merge(top_20_stazioni, result, on= "IDStations")
merge_new <- result
merge_new <- merge_new[, c("IDStations", "Date", "wdSuini", "wdBovini")]
merge_new <- rename(merge_new, Time = Date, LI_pigs = wdSuini, LI_bovine = wdBovini)
setwd("~/R/bdn/PlotTool")
save(merge_new, file= "Merge_new.rdata")
#Library
library(ggplot2)
library(sf)
library(cowplot)
setwd("~/R/bdn/PlotTool")
#File che servono alla funzione ma che non variano (tipo MergeA) -> servono 2/3 load prima della funzione
load("mergeA.rdata")
load("Merge_new.rdata")
#Library
library(ggplot2)
library(sf)
library(cowplot)
setwd("~/R/bdn/PlotTool")
#File che servono alla funzione ma che non variano (tipo MergeA) -> servono 2/3 load prima della funzione
load("mergeA.rdata")
load("Merge_new.rdata")
plot_bdn <- function(IDStations){
load("st_buffer.Rdata")
station_data <- merge_new[merge_new$IDStations == IDStations, ]
station_data <- station_data[order(station_data$Time), ]
#Old
station_data2 <- select_util_old[select_util_old$IDStations == IDStations, ]
station_data2 <- station_data2[order(station_data2$Time), ]
# Convert the Time variable to POSIXct format
station_data$Time  <- as.POSIXct(station_data$Time)
station_data2$Time <- as.POSIXct(station_data2$Time)
tspigs <- ggplot() +
geom_line(data = station_data, aes(x = Time, y = as.numeric(LI_pigs), color = "New")) +
geom_line(data = station_data2, aes(x = Time, y = as.numeric(LI_pigs), color = "Old")) +
labs(title = paste("Station ID", IDStations),
x = "Time",
color = "Data type")+
scale_y_continuous(name = "n/km2")
tsbov <- ggplot() +
geom_line(data = station_data, aes(x = Time, y = as.numeric(LI_bovine), color = "New")) +
geom_line(data = station_data2, aes(x = Time, y = as.numeric(LI_bovine), color = "Old")) +
labs(title = paste("Station ID", IDStations),
x = "Time",
color = "Data type")+
scale_y_continuous(name = "n/km2")
square <- st_buffer[st_buffer$IDStations==IDStations,]
st_crs(square) <- st_crs(mergeA)
mapPigs <- ggplot(mergeA) +
geom_sf(aes(fill = DensitySwines)) +
scale_fill_continuous(type = "viridis")+
geom_sf(data = cord_sf[cord_sf$IDStations==IDStations, ], col= "red")+
geom_sf(data = square, col = "red", fill = NA)+
coord_sf(xlim = c(st_coordinates(cord_sf[cord_sf$IDStations==IDStations, ])[1]-0.3, st_coordinates(cord_sf[cord_sf$IDStations==IDStations, ])[1]+0.3),
ylim = c(st_coordinates(cord_sf[cord_sf$IDStations==IDStations, ])[2]-0.3, st_coordinates(cord_sf[cord_sf$IDStations==IDStations, ])[2]+0.3)
)
mapBovine <- ggplot(mergeA) +
geom_sf(aes(fill = DensityBovine)) +
scale_fill_continuous(type = "viridis")+
geom_sf(data = cord_sf[cord_sf$IDStations==IDStations, ], col= "red")+
geom_sf(data = square, col = "red", fill = NA)+
coord_sf(xlim = c(st_coordinates(cord_sf[cord_sf$IDStations==IDStations, ])[1]-0.3, st_coordinates(cord_sf[cord_sf$IDStations==IDStations, ])[1]+0.3),
ylim = c(st_coordinates(cord_sf[cord_sf$IDStations==IDStations, ])[2]-0.3, st_coordinates(cord_sf[cord_sf$IDStations==IDStations, ])[2]+0.3)
)
plot_grid(tspigs, mapPigs, tsbov, mapBovine, nrow = 2)
}
plot_bdn("1266")
#Libraries
library(rgdal)
library(sf)
library(dplyr)
library(sp)
library(raster)
library(leaflet)
library(sf)
setwd("~/R/bdn/SerieStorica")
source("funzioneSerieStorica.R")
#Loading the shapefile
setwd("~/R/bdn")
shapename <- read_sf('Com01012021_g_WGS84.shp')
#Loading the datasets
setwd("~/R/bdn")
my_shapefile <- st_read(dsn = "Com01012021_g_WGS84.shp")
setwd("~/R/bdn/Plot Differenze")
load("top20.rdata")
setwd("~/R/bdn")
csv <- read.csv("Agrimonia_Dataset_v_2_0_1.csv")
#Libraries
library(rgdal)
library(sf)
library(dplyr)
library(sp)
library(raster)
library(leaflet)
library(sf)
setwd("~/R/bdn/SerieStorica")
source("funzioneSerieStorica.R")
#Loading the shapefile
setwd("~/R/bdn")
shapename <- read_sf('Com01012021_g_WGS84.shp')
#Loading the datasets
setwd("~/R/bdn")
my_shapefile <- st_read(dsn = "Com01012021_g_WGS84.shp")
setwd("~/R/bdn/Plot Differenze")
load("top20.rdata")
setwd("~/R/bdn")
csv <- read.csv("Agrimonia_Dataset_v_2_0_1.csv")
#Libraries
library(rgdal)
library(sf)
library(dplyr)
library(sp)
library(raster)
library(leaflet)
library(sf)
setwd("~/R/bdn/SerieStorica")
source("funzioneSerieStorica.R")
#Loading the shapefile
setwd("~/R/bdn")
shapename <- read_sf('Com01012021_g_WGS84.shp')
#Loading the datasets
setwd("~/R/bdn")
my_shapefile <- st_read(dsn = "Com01012021_g_WGS84.shp")
setwd("~/R/bdn/Plot Differenze")
load("top20.rdata")
setwd("~/R/bdn")
csv <- read.csv("Agrimonia_Dataset_v_2_0_1.csv")
coordinates <- unique(csv[,1:3])
coordinates(coordinates) <- c("Longitude", "Latitude")
cord_sf <- st_as_sf(coordinates)
#cord_sf <- st_as_sf(coordinates, coords =  c("Longitude", "Latitude"), crs = 4326)
save(coordinates, file = "coordinates.Rdata")
st_buffer <- st_buffer(cord_sf, nQuadSegs = 4,  endCapStyle = 'SQUARE', dist = 0.05)
st_buffer_big <- st_buffer(cord_sf, nQuadSegs = 4,  endCapStyle = 'SQUARE', dist = 0.2)
setwd("~/R/bdn")
load("newDensity.rdata")
positions <- csv[, c("IDStations", "Latitude", "Longitude")]
#merge <-merge(positions, top_20_stazioni, on = "IDStations")
merge <-positions
plot(my_shapefile$geometry)
#Old time series
#select_util_old <- merge(csv, top_20_stazioni, on = "IDStation")
select_util_old <- csv
select_util_old <- select_util_old[, c("IDStations", "Time","LI_pigs", "LI_bovine")]
#New time series
#merge_new <- merge(top_20_stazioni, result, on= "IDStations")
merge_new <- result
merge_new <- merge_new[, c("IDStations", "Date", "wdSuini", "wdBovini")]
merge_new <- rename(merge_new, Time = Date, LI_pigs = wdSuini, LI_bovine = wdBovini)
setwd("~/R/bdn/PlotTool")
save(merge_new, file= "Merge_new.rdata")
save(select_util_old, file="old_utils.rdata")
#Library
library(ggplot2)
library(sf)
library(cowplot)
setwd("~/R/bdn/PlotTool")
#File che servono alla funzione ma che non variano (tipo MergeA) -> servono 2/3 load prima della funzione
load("mergeA.rdata")
load("Merge_new.rdata")
load("old_utils.rdata")
plot_bdn <- function(IDStations){
load("st_buffer.Rdata")
station_data <- merge_new[merge_new$IDStations == IDStations, ]
station_data <- station_data[order(station_data$Time), ]
#Old
station_data2 <- select_util_old[select_util_old$IDStations == IDStations, ]
station_data2 <- station_data2[order(station_data2$Time), ]
# Convert the Time variable to POSIXct format
station_data$Time  <- as.POSIXct(station_data$Time)
station_data2$Time <- as.POSIXct(station_data2$Time)
tspigs <- ggplot() +
geom_line(data = station_data, aes(x = Time, y = as.numeric(LI_pigs), color = "New")) +
geom_line(data = station_data2, aes(x = Time, y = as.numeric(LI_pigs), color = "Old")) +
labs(title = paste("Station ID", IDStations),
x = "Time",
color = "Data type")+
scale_y_continuous(name = "n/km2")
tsbov <- ggplot() +
geom_line(data = station_data, aes(x = Time, y = as.numeric(LI_bovine), color = "New")) +
geom_line(data = station_data2, aes(x = Time, y = as.numeric(LI_bovine), color = "Old")) +
labs(title = paste("Station ID", IDStations),
x = "Time",
color = "Data type")+
scale_y_continuous(name = "n/km2")
square <- st_buffer[st_buffer$IDStations==IDStations,]
st_crs(square) <- st_crs(mergeA)
mapPigs <- ggplot(mergeA) +
geom_sf(aes(fill = DensitySwines)) +
scale_fill_continuous(type = "viridis")+
geom_sf(data = cord_sf[cord_sf$IDStations==IDStations, ], col= "red")+
geom_sf(data = square, col = "red", fill = NA)+
coord_sf(xlim = c(st_coordinates(cord_sf[cord_sf$IDStations==IDStations, ])[1]-0.3, st_coordinates(cord_sf[cord_sf$IDStations==IDStations, ])[1]+0.3),
ylim = c(st_coordinates(cord_sf[cord_sf$IDStations==IDStations, ])[2]-0.3, st_coordinates(cord_sf[cord_sf$IDStations==IDStations, ])[2]+0.3)
)
mapBovine <- ggplot(mergeA) +
geom_sf(aes(fill = DensityBovine)) +
scale_fill_continuous(type = "viridis")+
geom_sf(data = cord_sf[cord_sf$IDStations==IDStations, ], col= "red")+
geom_sf(data = square, col = "red", fill = NA)+
coord_sf(xlim = c(st_coordinates(cord_sf[cord_sf$IDStations==IDStations, ])[1]-0.3, st_coordinates(cord_sf[cord_sf$IDStations==IDStations, ])[1]+0.3),
ylim = c(st_coordinates(cord_sf[cord_sf$IDStations==IDStations, ])[2]-0.3, st_coordinates(cord_sf[cord_sf$IDStations==IDStations, ])[2]+0.3)
)
plot_grid(tspigs, mapPigs, tsbov, mapBovine, nrow = 2)
}
plot_bdn("1266")
#Libraries
library(rgdal)
library(sf)
library(dplyr)
library(sp)
library(raster)
library(leaflet)
library(sf)
setwd("~/R/bdn/SerieStorica")
source("funzioneSerieStorica.R")
#Loading the shapefile
setwd("~/R/bdn")
shapename <- read_sf('Com01012021_g_WGS84.shp')
#Loading the datasets
setwd("~/R/bdn")
my_shapefile <- st_read(dsn = "Com01012021_g_WGS84.shp")
setwd("~/R/bdn/Plot Differenze")
load("top20.rdata")
setwd("~/R/bdn")
csv <- read.csv("Agrimonia_Dataset_v_2_0_1.csv")
coordinates <- unique(csv[,1:3])
coordinates(coordinates) <- c("Longitude", "Latitude")
cord_sf <- st_as_sf(coordinates)
#cord_sf <- st_as_sf(coordinates, coords =  c("Longitude", "Latitude"), crs = 4326)
save(coordinates, file = "coordinates.Rdata")
st_buffer <- st_buffer(cord_sf, nQuadSegs = 4,  endCapStyle = 'SQUARE', dist = 0.05)
st_buffer_big <- st_buffer(cord_sf, nQuadSegs = 4,  endCapStyle = 'SQUARE', dist = 0.2)
setwd("~/R/bdn")
load("newDensity.rdata")
positions <- csv[, c("IDStations", "Latitude", "Longitude")]
#merge <-merge(positions, top_20_stazioni, on = "IDStations")
merge <-positions
plot(my_shapefile$geometry)
#Old time series
#select_util_old <- merge(csv, top_20_stazioni, on = "IDStation")
select_util_old <- csv
select_util_old <- select_util_old[, c("IDStations", "Time","LI_pigs", "LI_bovine")]
#New time series
#merge_new <- merge(top_20_stazioni, result, on= "IDStations")
merge_new <- result
merge_new <- merge_new[, c("IDStations", "Date", "wdSuini", "wdBovini")]
merge_new <- rename(merge_new, Time = Date, LI_pigs = wdSuini, LI_bovine = wdBovini)
setwd("~/R/bdn/PlotTool")
save(merge_new, file= "Merge_new.rdata")
save(select_util_old, file="old_utils.rdata")
#Merge
load("dataMerge.rdata")
setwd("~/R/bdn/PlotTool")
save(cord_sf, file= "cord_sf.rdata")
#Library
library(ggplot2)
library(sf)
library(cowplot)
setwd("~/R/bdn/PlotTool")
#File che servono alla funzione ma che non variano (tipo MergeA) -> servono 2/3 load prima della funzione
load("mergeA.rdata")
load("Merge_new.rdata")
load("old_utils.rdata")
plot_bdn <- function(IDStations){
load("st_buffer.Rdata")
station_data <- merge_new[merge_new$IDStations == IDStations, ]
station_data <- station_data[order(station_data$Time), ]
#Old
station_data2 <- select_util_old[select_util_old$IDStations == IDStations, ]
station_data2 <- station_data2[order(station_data2$Time), ]
# Convert the Time variable to POSIXct format
station_data$Time  <- as.POSIXct(station_data$Time)
station_data2$Time <- as.POSIXct(station_data2$Time)
tspigs <- ggplot() +
geom_line(data = station_data, aes(x = Time, y = as.numeric(LI_pigs), color = "New")) +
geom_line(data = station_data2, aes(x = Time, y = as.numeric(LI_pigs), color = "Old")) +
labs(title = paste("Station ID", IDStations),
x = "Time",
color = "Data type")+
scale_y_continuous(name = "n/km2")
tsbov <- ggplot() +
geom_line(data = station_data, aes(x = Time, y = as.numeric(LI_bovine), color = "New")) +
geom_line(data = station_data2, aes(x = Time, y = as.numeric(LI_bovine), color = "Old")) +
labs(title = paste("Station ID", IDStations),
x = "Time",
color = "Data type")+
scale_y_continuous(name = "n/km2")
square <- st_buffer[st_buffer$IDStations==IDStations,]
st_crs(square) <- st_crs(mergeA)
mapPigs <- ggplot(mergeA) +
geom_sf(aes(fill = DensitySwines)) +
scale_fill_continuous(type = "viridis")+
geom_sf(data = cord_sf[cord_sf$IDStations==IDStations, ], col= "red")+
geom_sf(data = square, col = "red", fill = NA)+
coord_sf(xlim = c(st_coordinates(cord_sf[cord_sf$IDStations==IDStations, ])[1]-0.3, st_coordinates(cord_sf[cord_sf$IDStations==IDStations, ])[1]+0.3),
ylim = c(st_coordinates(cord_sf[cord_sf$IDStations==IDStations, ])[2]-0.3, st_coordinates(cord_sf[cord_sf$IDStations==IDStations, ])[2]+0.3)
)
mapBovine <- ggplot(mergeA) +
geom_sf(aes(fill = DensityBovine)) +
scale_fill_continuous(type = "viridis")+
geom_sf(data = cord_sf[cord_sf$IDStations==IDStations, ], col= "red")+
geom_sf(data = square, col = "red", fill = NA)+
coord_sf(xlim = c(st_coordinates(cord_sf[cord_sf$IDStations==IDStations, ])[1]-0.3, st_coordinates(cord_sf[cord_sf$IDStations==IDStations, ])[1]+0.3),
ylim = c(st_coordinates(cord_sf[cord_sf$IDStations==IDStations, ])[2]-0.3, st_coordinates(cord_sf[cord_sf$IDStations==IDStations, ])[2]+0.3)
)
plot_grid(tspigs, mapPigs, tsbov, mapBovine, nrow = 2)
}
plot_bdn("1266")
load("cord_sf.rdata")
#Library
library(ggplot2)
library(sf)
library(cowplot)
setwd("~/R/bdn/PlotTool")
#File che servono alla funzione ma che non variano (tipo MergeA) -> servono 2/3 load prima della funzione
load("mergeA.rdata")
load("Merge_new.rdata")
load("old_utils.rdata")
load("cord_sf.rdata")
plot_bdn <- function(IDStations){
load("st_buffer.Rdata")
station_data <- merge_new[merge_new$IDStations == IDStations, ]
station_data <- station_data[order(station_data$Time), ]
#Old
station_data2 <- select_util_old[select_util_old$IDStations == IDStations, ]
station_data2 <- station_data2[order(station_data2$Time), ]
# Convert the Time variable to POSIXct format
station_data$Time  <- as.POSIXct(station_data$Time)
station_data2$Time <- as.POSIXct(station_data2$Time)
tspigs <- ggplot() +
geom_line(data = station_data, aes(x = Time, y = as.numeric(LI_pigs), color = "New")) +
geom_line(data = station_data2, aes(x = Time, y = as.numeric(LI_pigs), color = "Old")) +
labs(title = paste("Station ID", IDStations),
x = "Time",
color = "Data type")+
scale_y_continuous(name = "n/km2")
tsbov <- ggplot() +
geom_line(data = station_data, aes(x = Time, y = as.numeric(LI_bovine), color = "New")) +
geom_line(data = station_data2, aes(x = Time, y = as.numeric(LI_bovine), color = "Old")) +
labs(title = paste("Station ID", IDStations),
x = "Time",
color = "Data type")+
scale_y_continuous(name = "n/km2")
square <- st_buffer[st_buffer$IDStations==IDStations,]
st_crs(square) <- st_crs(mergeA)
mapPigs <- ggplot(mergeA) +
geom_sf(aes(fill = DensitySwines)) +
scale_fill_continuous(type = "viridis")+
geom_sf(data = cord_sf[cord_sf$IDStations==IDStations, ], col= "red")+
geom_sf(data = square, col = "red", fill = NA)+
coord_sf(xlim = c(st_coordinates(cord_sf[cord_sf$IDStations==IDStations, ])[1]-0.3, st_coordinates(cord_sf[cord_sf$IDStations==IDStations, ])[1]+0.3),
ylim = c(st_coordinates(cord_sf[cord_sf$IDStations==IDStations, ])[2]-0.3, st_coordinates(cord_sf[cord_sf$IDStations==IDStations, ])[2]+0.3)
)
mapBovine <- ggplot(mergeA) +
geom_sf(aes(fill = DensityBovine)) +
scale_fill_continuous(type = "viridis")+
geom_sf(data = cord_sf[cord_sf$IDStations==IDStations, ], col= "red")+
geom_sf(data = square, col = "red", fill = NA)+
coord_sf(xlim = c(st_coordinates(cord_sf[cord_sf$IDStations==IDStations, ])[1]-0.3, st_coordinates(cord_sf[cord_sf$IDStations==IDStations, ])[1]+0.3),
ylim = c(st_coordinates(cord_sf[cord_sf$IDStations==IDStations, ])[2]-0.3, st_coordinates(cord_sf[cord_sf$IDStations==IDStations, ])[2]+0.3)
)
plot_grid(tspigs, mapPigs, tsbov, mapBovine, nrow = 2)
}
plot_bdn("1266")
load("st_buffer.Rdata")
station_data <- merge_new[merge_new$IDStations == IDStations, ]
IDStations = "1266"
load("st_buffer.Rdata")
station_data <- merge_new[merge_new$IDStations == IDStations, ]
station_data <- station_data[order(station_data$Time), ]
#Old
station_data2 <- select_util_old[select_util_old$IDStations == IDStations, ]
station_data2 <- station_data2[order(station_data2$Time), ]
# Convert the Time variable to POSIXct format
station_data$Time  <- as.POSIXct(station_data$Time)
station_data2$Time <- as.POSIXct(station_data2$Time)
tspigs <- ggplot() +
geom_line(data = station_data, aes(x = Time, y = as.numeric(LI_pigs), color = "New")) +
geom_line(data = station_data2, aes(x = Time, y = as.numeric(LI_pigs), color = "Old")) +
labs(title = paste("Station ID", IDStations),
x = "Time",
color = "Data type")+
scale_y_continuous(name = "n/km2")
tspigs
tsbov <- ggplot() +
geom_line(data = station_data, aes(x = Time, y = as.numeric(LI_bovine), color = "New")) +
geom_line(data = station_data2, aes(x = Time, y = as.numeric(LI_bovine), color = "Old")) +
labs(title = paste("Station ID", IDStations),
x = "Time",
color = "Data type")+
scale_y_continuous(name = "n/km2")
tsbov
square <- st_buffer[st_buffer$IDStations==IDStations,]
st_crs(square) <- st_crs(mergeA)
mapPigs <- ggplot(mergeA) +
geom_sf(aes(fill = DensitySwines)) +
scale_fill_continuous(type = "viridis")+
geom_sf(data = cord_sf[cord_sf$IDStations==IDStations, ], col= "red")+
geom_sf(data = square, col = "red", fill = NA)+
coord_sf(xlim = c(st_coordinates(cord_sf[cord_sf$IDStations==IDStations, ])[1]-0.3, st_coordinates(cord_sf[cord_sf$IDStations==IDStations, ])[1]+0.3),
ylim = c(st_coordinates(cord_sf[cord_sf$IDStations==IDStations, ])[2]-0.3, st_coordinates(cord_sf[cord_sf$IDStations==IDStations, ])[2]+0.3)
)
mapPigs
mapPigs <- ggplot(mergeA) +
geom_sf(aes(fill = DensitySwines)) +
scale_fill_continuous(type = "viridis")+
geom_sf(data = cord_sf[cord_sf$IDStations==IDStations, ], col= "red")
mapPigs
st_crs(cord_sf)
st_crs(square)
st_crs(mergeA)
st_crs(cord_sf) <- st_crs(square)
st_crs(cord_sf)
mapPigs <- ggplot(mergeA) +
geom_sf(aes(fill = DensitySwines)) +
scale_fill_continuous(type = "viridis")+
geom_sf(data = cord_sf[cord_sf$IDStations==IDStations, ], col= "red")+
geom_sf(data = square, col = "red", fill = NA)+
coord_sf(xlim = c(st_coordinates(cord_sf[cord_sf$IDStations==IDStations, ])[1]-0.3, st_coordinates(cord_sf[cord_sf$IDStations==IDStations, ])[1]+0.3),
ylim = c(st_coordinates(cord_sf[cord_sf$IDStations==IDStations, ])[2]-0.3, st_coordinates(cord_sf[cord_sf$IDStations==IDStations, ])[2]+0.3)
)
mapPigs
#Library
library(ggplot2)
library(sf)
library(cowplot)
setwd("~/R/bdn/PlotTool")
#File che servono alla funzione ma che non variano (tipo MergeA) -> servono 2/3 load prima della funzione
load("mergeA.rdata")
load("Merge_new.rdata")
load("old_utils.rdata")
load("cord_sf.rdata")
plot_bdn <- function(IDStations){
load("st_buffer.Rdata")
station_data <- merge_new[merge_new$IDStations == IDStations, ]
station_data <- station_data[order(station_data$Time), ]
#Old
station_data2 <- select_util_old[select_util_old$IDStations == IDStations, ]
station_data2 <- station_data2[order(station_data2$Time), ]
# Convert the Time variable to POSIXct format
station_data$Time  <- as.POSIXct(station_data$Time)
station_data2$Time <- as.POSIXct(station_data2$Time)
tspigs <- ggplot() +
geom_line(data = station_data, aes(x = Time, y = as.numeric(LI_pigs), color = "New")) +
geom_line(data = station_data2, aes(x = Time, y = as.numeric(LI_pigs), color = "Old")) +
labs(title = paste("Station ID", IDStations),
x = "Time",
color = "Data type")+
scale_y_continuous(name = "n/km2")
tsbov <- ggplot() +
geom_line(data = station_data, aes(x = Time, y = as.numeric(LI_bovine), color = "New")) +
geom_line(data = station_data2, aes(x = Time, y = as.numeric(LI_bovine), color = "Old")) +
labs(title = paste("Station ID", IDStations),
x = "Time",
color = "Data type")+
scale_y_continuous(name = "n/km2")
square <- st_buffer[st_buffer$IDStations==IDStations,]
st_crs(square) <- st_crs(mergeA)
st_crs(cord_sf) <- st_crs(square)
mapPigs <- ggplot(mergeA) +
geom_sf(aes(fill = DensitySwines)) +
scale_fill_continuous(type = "viridis")+
geom_sf(data = cord_sf[cord_sf$IDStations==IDStations, ], col= "red")+
geom_sf(data = square, col = "red", fill = NA)+
coord_sf(xlim = c(st_coordinates(cord_sf[cord_sf$IDStations==IDStations, ])[1]-0.3, st_coordinates(cord_sf[cord_sf$IDStations==IDStations, ])[1]+0.3),
ylim = c(st_coordinates(cord_sf[cord_sf$IDStations==IDStations, ])[2]-0.3, st_coordinates(cord_sf[cord_sf$IDStations==IDStations, ])[2]+0.3)
)
mapBovine <- ggplot(mergeA) +
geom_sf(aes(fill = DensityBovine)) +
scale_fill_continuous(type = "viridis")+
geom_sf(data = cord_sf[cord_sf$IDStations==IDStations, ], col= "red")+
geom_sf(data = square, col = "red", fill = NA)+
coord_sf(xlim = c(st_coordinates(cord_sf[cord_sf$IDStations==IDStations, ])[1]-0.3, st_coordinates(cord_sf[cord_sf$IDStations==IDStations, ])[1]+0.3),
ylim = c(st_coordinates(cord_sf[cord_sf$IDStations==IDStations, ])[2]-0.3, st_coordinates(cord_sf[cord_sf$IDStations==IDStations, ])[2]+0.3)
)
plot_grid(tspigs, mapPigs, tsbov, mapBovine, nrow = 2)
}
plot_bdn("1266")
